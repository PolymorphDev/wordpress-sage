@import "common/vars";
@import "include/func";
@import "include/anim";
@import "include/flex";
@import "include/grid";
@import "include/util";

/**
 * Retrieve the block vertical space value for the specified breakpoint.
 * @function block-spacing-v
 * @sinc 1.0.0
 */
@function block-spacing-v($bp, $mul: 1, $add: 0) {
	@return rem(map-get($block-spacings-v, $bp) * $mul + $add);
}

/**
 * Retrieve the block horizonta. space value for the specified breakpoint.
 * @function block-spacing-h
 * @sinc 1.0.0
 */
@function block-spacing-h($bp, $mul: 1, $add: 0) {
	@return rem(map-get($block-spacings-h, $bp) * $mul + $add);
}

/**
 * @function get-block-spacing-v
 * @sinc 1.0.0
 * @hidden
 */
 @function get-block-spacing-v($bp) {
	@return map-get($block-spacings-v, $bp);
}

/**
 * @function get-block-spacing-h
 * @sinc 1.0.0
 * @hidden
 */
 @function get-block-spacing-h($bp, $mul: 1, $add: 0) {
	@return map-get($block-spacings-h, $bp);
}

/**
 * Initialize the common styles of a block.
 * @function block
 * @since 1.0.1
 */
@mixin block($spacing: spaced, $mul: 1) {

	@include relative;

	@if ($spacing == spaced) {
		@include media-break-down using ($bp) {
			margin-top: block-spacing-v($bp, $mul);
			margin-bottom: block-spacing-v($bp, $mul);
		}
	}

	@if ($spacing == padded) {
		@include media-break-down using ($bp) {
			padding-top: block-spacing-v($bp, $mul);
			padding-bottom: block-spacing-v($bp, $mul);
		}
	}
}
