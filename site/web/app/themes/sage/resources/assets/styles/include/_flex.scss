
/**
 * @mixin flexbox
 * @since 1.0.0
 */
 @mixin flexbox {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
}

/**
 * @mixin inline-flex
 * @since 1.0.0
 */
@mixin inline-flex {
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

/**
 * @mixin flex-direction
 * @since 1.0.0
 */
@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

/**
 * @mixin flex-wrap
 * @since 1.0.0
 */
@mixin flex-wrap($value: nowrap) {
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	@if $value == nowrap {
		-ms-flex-wrap: none;
	} @else {
		-ms-flex-wrap: $value;
	}
	flex-wrap: $value;
}

/**
 * @mixin flex-flow
 * @since 1.0.0
 */
@mixin flex-flow($values: (row nowrap)) {
	-webkit-flex-flow: $values;
	-moz-flex-flow: $values;
	-ms-flex-flow: $values;
	flex-flow: $values;
}

/**
 * @mixin order
 * @since 1.0.0
 */
@mixin order($int: 0) {
	-webkit-box-ordinal-group: $int + 1;
	-webkit-order: $int;
	-moz-order: $int;
	-ms-flex-order: $int;
	order: $int;
}

/**
 * @mixin flex-grow
 * @since 1.0.0
 */
@mixin flex-grow($int: 0) {
	-webkit-box-flex: $int;
	-webkit-flex-grow: $int;
	-moz-flex-grow: $int;
	-ms-flex-positive: $int;
	flex-grow: $int;
}

/**
 * @mixin flex-shrink
 * @since 1.0.0
 */
@mixin flex-shrink($int: 1) {
	-webkit-flex-shrink: $int;
	-moz-flex-shrink: $int;
	-ms-flex-negative: $int;
	flex-shrink: $int;
}

/**
 * @mixin flex-basis
 * @since 1.0.0
 */
@mixin flex-basis($value: auto) {
	-webkit-flex-basis: $value;
	-moz-flex-basis: $value;
	-ms-flex-preferred-size: $value;
	flex-basis: $value;
}

/**
 * @mixin flex
 * @since 1.0.0
 */
@mixin flex($fg: 1, $fs: null, $fb: null) {

	$fg-boxflex: $fg;

	@if type-of($fg) == 'list' {
		$fg-boxflex: nth($fg, 1);
	}

	-webkit-box-flex: $fg-boxflex;
	-webkit-flex: $fg $fs $fb;
	-moz-box-flex: $fg-boxflex;
	-moz-flex: $fg $fs $fb;
	-ms-flex: $fg $fs $fb;
	flex: $fg $fs $fb;
}

/**
 * @mixin justify-content
 * @since 1.0.0
 */
@mixin justify-content($value: flex-start) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
	} @else if $value == space-around {
		-ms-flex-pack: distribute;
	} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
	}
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}

/**
 * @mixin align-items
 * @since 1.0.0
 */
@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

/**
 * @mixin align-self
 * @since 1.0.0
 */
@mixin align-self($value: auto) {
	-webkit-align-self: $value;
	-moz-align-self: $value;
	@if $value == flex-start {
		-ms-flex-item-align: start;
	} @else if $value == flex-end {
		-ms-flex-item-align: end;
	} @else {
		-ms-flex-item-align: $value;
	}
	align-self: $value;
}

/**
 * @mixin align-content
 * @since 1.0.0
 */
@mixin align-content($value: stretch) {
	-webkit-align-content: $value;
	-moz-align-content: $value;
	@if $value == flex-start {
		-ms-flex-line-pack: start;
	} @else if $value == flex-end {
		-ms-flex-line-pack: end;
	} @else {
		-ms-flex-line-pack: $value;
	}
	align-content: $value;
}

/**
 * @mixin flex-box
 * @since 1.0.0
 */
@mixin flex-box {
	@include flexbox;
}

/**
 * @mixin flex-box-inline
 * @since 1.0.0
 */
@mixin flex-box-inline {
	@include inline-flex;
}

/**
 * @mixin flex-row
 * @since 1.0.0
 */
@mixin flex-row($valign, $halign, $mode: normal) {

	@if $mode == reverse {
		@include flex-direction(row-reverse);
	} @else {
		@include flex-direction(row);
	}

	@include align-items($valign);
	@include justify-content($halign);
}

/**
 * @mixin flex-col
 * @since 1.0.0
 */
@mixin flex-col($valign, $halign, $mode: normal) {

	@if $mode == reverse {
		@include flex-direction(column-reverse);
	} @else {
		@include flex-direction(column);
	}

	@include align-items($halign);
	@include justify-content($valign);
}

/**
 * @mixin mflex-set
 * @since 1.0.0
 */
@mixin flex-set($align) {
	@include align-self($align);
}